# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

#on:#
#  workflow_dispatch:
#    inputs:
#      environment:
#        type: choice
#        options:
#          - dev
#          - qa
#          - prod
#        description: Deployment environment
#      space:
#        type: choice
#        options:
#          - synthetic
#          - actual
#        description: Deployment environment

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
#    - name: Build wheel and install
#      run: |
#        python -m pip install --user --upgrade build
#        python -m build
#        #pip install .
#        find ./dist/*.whl | xargs pip install
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Execute dev file
      run: python main.py input.environment
    - name : Execute main.py
      run : python test.py

#
#1. Push:
#git push is used to upload local repository content to a remote repository.
#Example: git push origin main pushes the commits from your local main branch to the remote repository named origin.
#2. Pull:
#git pull is used to fetch and download content from a remote repository and immediately update the local repository to match that content.
#Example: git pull origin main fetches changes from the main branch of the remote repository named origin and merges them into the current branch.
#3. Merge:
#git merge is used to combine changes from one branch into another.
#Example: git merge feature_branch merges the changes from the feature_branch into the current branch.
#4. Fetch:
#git fetch is used to download content from a remote repository without integrating it into your working branch.
#Example: git fetch origin retrieves all branches from the remote repository named origin so you can inspect them before merging.
#5. Update:
#There's no direct git update command in Git, but git pull and git fetch can be considered as commands that update your local repository with changes from a remote repository.
#6. Rebase:
#git rebase is used to move or combine a sequence of commits to a new base commit. It's often used to maintain a cleaner and linear project history.
#Example: git rebase main moves your commits to the tip of the main branch, rewriting the commit history.
#7. Checkout:
#git checkout is used to switch branches or restore working tree files.
#Example: git checkout main switches to the main branch.
#8. Clone:
#git clone is used to create a copy of a remote repository on your local machine.
#Example: git clone <repository-url> creates a local copy of the repository specified by <repository-url>.
#10. Commit:
#git commit is used to record changes to the repository. It captures a snapshot of the changes staged using git add.
#Example: git commit -m "Your commit message" creates a commit with the specified message.